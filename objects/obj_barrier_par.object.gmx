<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boulder</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if variable_local_exists("revert_position")=0
revert_position=1


weight=10
//how heavy it is. 0 means it can be picked up without any gear. 1 needs lvl 1 gear, etc. Obviously 10 is impossible to lift.

image_index_random=0




/*
can_push=0
no
up
right
left
down
any
anyonce
*/

if variable_local_exists("can_push")=0
can_push="no"

pushing=0
pushing_dir=0
relocation=0


falling=0
can_sink=0

x_start=x
y_start=y
can_push_start=can_push

    
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if variable_local_exists("event_id")=1
{
    if variable_local_exists("event_destroy")=1
    {
        if global.event[event_id]=1
        instance_destroy()
        
        exit
    }
    
    if variable_local_exists("event_create")=1
    {
        if global.event[event_id]=0
        instance_destroy()
        
        exit
    }
    
    if global.event[event_id]=1
    if variable_local_exists("xnew")
    {
        x+=xnew
        y+=ynew
        x_start=x
        y_start=y
        can_push="no"
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pushing=1
{
    solid=0
    x=x+lengthdir_x(global.push_block_speed,pushing_dir)
    y=y+lengthdir_y(global.push_block_speed,pushing_dir)
    
    
        with obj_enemy_par
        {
            if collides_with_walls=1
            if visible=1
            if place_meeting(x,y,other.id)
            {
            
                var moved_x, moved_y;
                moved_x=0
                moved_y=0
                
            
                if other.pushing_dir=0
                or other.pushing_dir=180
                {
            
                    
                    i=ceil(global.push_block_speed)
                    repeat(8)
                    {
                        if place_meeting(x+lengthdir_x(i,other.pushing_dir),y,obj_barrier_par)=0
                        and place_meeting(x+lengthdir_x(i,other.pushing_dir),y,obj_enemy_barrier)=0
                        {
                            x+=lengthdir_x(i,other.pushing_dir)
                            moved_x=1
                            break
                        }
                            
                        i+=1
                    }
                    if moved_x=0
                    {
                        move_outside_solid(point_direction(other.x+8,other.y+8,x,y),8)
                    }
                        if place_meeting(x,y,obj_barrier_par)=1
                        life=0
                    
                }
                
                
                if other.pushing_dir=90
                or other.pushing_dir=270
                {
                    
                    i=ceil(global.push_block_speed)
                    repeat(8)
                    {
                        if place_meeting(x,y+lengthdir_y(i,other.pushing_dir),obj_barrier_par)=0
                        and place_meeting(x,y+lengthdir_y(i,other.pushing_dir),obj_enemy_barrier)=0
                        {
                            y+=lengthdir_y(i,other.pushing_dir)
                            moved_y=1
                            break
                        }
                            
                        i+=1
                    }
                    if moved_y=0
                    {
                        move_outside_solid(point_direction(other.x+8,other.y+8,x,y),8)
                    }
                        if place_meeting(x,y,obj_barrier_par)=1
                        life=0
                        
                }
                
            }
        }
    
    
    relocation+=global.push_block_speed
    if relocation=16
    {
        pushing=0
        relocation=0
        
        if variable_local_exists("item")
        {
            instance_create(x_start+item_x,y_start+item_y,item)
        }
    }
}


else
{
    solid=1
    /*
    x=round(x/16)*16
    y=round(y/16)*16
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,round(x),round(y),image_xscale,image_yscale,image_angle,c_white,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
