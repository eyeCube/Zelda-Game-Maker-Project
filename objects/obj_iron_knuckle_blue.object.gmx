<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_iron_knuckle_blue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//STATES

collides_with_walls=1

draw_own_poison=1

stun_attack=1

stopped=0
stop_after_attack_time=17

hit=0
hurt_init=0 //triggered when health drops below 1/2 of max health

dead=0
death_timer=30

aggro=0
aggro_distance=55

attack=0
stab=0

spritewidth=sprite_width-2
spriteheight=sprite_height

moving_speed=0


//can_change_direction=30
direction=270
aim=direction
image_index=3
return_index=image_index
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>life_max=20
life=life_max
mass=20

avoid_link_collision=0

sprint_distance=50

force=120
damage_default=2
damage=damage_default
sword_damage=8
sword_stun=23
slow=0
stun_normal=0
stun=stun_normal
ice=0
fire=0
shock=0
poison=0
slowed=0
stunned=0
frozen=0
burned=0
shocked=0
poisoned=0
hold=0

knockback=0
sword_push_away=1.1
sword_shield_push_away=1.25
attack_retreat=0


rupee=obj_rupee_purple


sprite_hurt_normal=spr_iron_knuckle_hurt
sprite_hurt_attack[0]=spr_iron_knuckle_hurt_attacking_right
sprite_hurt_attack[1]=spr_iron_knuckle_hurt_attacking_up
sprite_hurt_attack[2]=spr_iron_knuckle_hurt_attacking_left
sprite_hurt_attack[3]=spr_iron_knuckle_hurt_attacking_down
sprite_hurt_stab=spr_iron_knuckle_hurt_stabbing
hurt_sprite=sprite_hurt_normal
sprite_normal=sprite_index
sprite_attack[0]=spr_iron_knuckle_blue_attacking_right
sprite_attack[1]=spr_iron_knuckle_blue_attacking_up
sprite_attack[2]=spr_iron_knuckle_blue_attacking_left
sprite_attack[3]=spr_iron_knuckle_blue_attacking_down
sprite_stab=spr_iron_knuckle_blue_stabbing
sprite_current=sprite_index

sprite_left=9-4
sprite_right=9-4
sprite_up=12-4
sprite_down=12-4
sprite_left_normal=sprite_left
sprite_right_normal=sprite_right
sprite_up_normal=sprite_up
sprite_down_normal=sprite_down
//distance the sprite_up, etc. becomes when he attacks
attack_swing=25

sprite_width_default=sprite_width
sprite_height_default=sprite_height


move_speed=1.3
move_speed_hurt=1.5
image_speed_normal=.04
image_speed_attacking=.25
image_speed_stabbing=.25
image_speed_hurt=.05
image_speed_manual=image_speed_normal
image_index_mod=0
image_index=3
image_speed=0

attack_speed=11
attack_speed_hurt=11
attack_friction=1
attack_distance=25 //20
stop_attack=10      //7
stop_attack_hurt=10     //6
attack_init_time_normal=15      //11
attack_init_time=attack_init_time_normal
attack_init_time_double=17 //not used currently
attack_init_time_hurt=10     //8
stab_init_time=20       //15
stab_init_distance=90
stop_stab=5
stop_stab_hurt=4.5
stab_wait=0
stab_wait_time=30
stab_wait_time_hurt=0
stab_wait_time_hurt_chance=.45
stab_init_time_chance=0
init_shockwave_time=6
shockwave_speed=7      //10
shockwave_number=20
shockwave_damage=2

double_attack_distance=48
double_attack_chance=.25
double_attack_chance_hurt=.4
double_attack_wait=1

attack_wait=26
attack_wait_hurt=18
alarm[0]=2
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//RESISTANCES

throw_stun=0
res_throw=0
boomerang_stun=0
res_boomerang=0
res_fire=.75
res_ice=0
res_ice_damage=0
res_lightning=.75
res_lightning_damage=1
res_light=0
res_physical=1
physical_stun=0
res_sword_beam=0
res_arrow=0
arrow_bounce=1
res_magic=0
magic_transform=0
magic_transform_object=0
res_explosion=.65
res_explosion_damage=1
res_poison=.82
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj=instance_create(x,y,obj_enemy_explosion)
obj.sprite_index=spr_explosion
obj.image_speed=.33
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//LOOT


instance_create(x,y,rupee)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if return_index=1
{

    sprite_right+=8
    sprite_down=-4

}


if return_index=3
{

    sprite_left+=8
    sprite_up=-4

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//release shockwave


i=point_direction(x,y,obj_link.x,obj_link.y)

repeat(shockwave_number)
{

    obj=instance_create(x,y,obj_enemy_bolt)
    obj.direction=i
    obj.speed=shockwave_speed
    obj.sprite_index=spr_lightning_bolt
    obj.spell="Lightning"
    obj.damage=shockwave_damage
    obj.deflectable=0
    obj.particle_sprite=spr_lightning_bolt
    
    i+=360/shockwave_number

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed_manual=image_speed_stabbing
alarm[5]=init_shockwave_time
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animated=1

damage=sword_damage
stun=sword_stun

if life&lt;life_max/2
moving_speed=attack_speed_hurt
else
moving_speed=attack_speed
    
alarm[1]=4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dead=1 exit



sprite_left=sprite_left_normal
sprite_right=sprite_right_normal
sprite_up=sprite_up_normal
sprite_down=sprite_down_normal

damage=damage_default
stun=stun_normal

move_outside_solid(direction-180,speed+1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dead=1 exit




alarm[2]=6
alarm[6]=3


/*
        NOTE! Alarm6 also controls sprite_right, etc.
*/

    
    if return_index=0
    {
    
        sprite_right=attack_swing
        sprite_left=0
        sprite_up+=3
        sprite_down+=3
    
    }
    
    if return_index=1
    {
    
        sprite_up=attack_swing
        sprite_left+=0      //4
        sprite_right+=0      //6
        sprite_down=0
    
    }
    
    if return_index=2
    {
    
        sprite_left=attack_swing
        sprite_right=0
        sprite_up+=3
        sprite_down+=3
    
    }
    
    if return_index=3
    {
    
        sprite_down=attack_swing
        sprite_left+=0       //6
        sprite_right+=0     //4
        sprite_up=0
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//ATTACKING


if dead=1 exit

if stab=1
{
    alarm[0]=4
    exit
}

if shocked&gt;0
exit

if frozen&gt;0
exit





if distance_to_object(obj_link)&lt;attack_distance
{

    //aim=round(point_direction(x,y,obj_link.x,obj_link.y)/90)*90
    //image_index=aim/90
    

    var temp_var;
    temp_var=(round(image_index) mod 4)
    
    attack=1
    animated=0
    
    sprite_index=sprite_attack[temp_var]
    
    sprite_current=sprite_index
    hurt_sprite=sprite_hurt_attack[temp_var]
    image_index_mod=0
    return_index=temp_var
    image_index=0
    
    speed=0
    
    alarm[3]=attack_init_time   +round((shocked&gt;0)*shocked/3) //when shocked there's a little delay
    attack_init_time=attack_init_time_normal

    direction=aim//point_direction(x,y,obj_link.x,obj_link.y)
    
}



else
{

    alarm[0]=4

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STATUS

stunned-=1

//////////////////////////////////////////////////////////////////
if global.show_inventory=1
exit
//////////////////////////////////////////////////////////////////

burned-=1
if burned&gt;0
burn_damage_timer-=1
if burn_damage_timer&lt;0 burn_damage_timer=0
frozen-=1
shocked-=1
slowed-=1

stopped-=1

stab_wait-=1


sprite_index=sprite_current

hit-=1

if hit&gt;0
or shocked&gt;0
{

    if alarm[0]&gt;3
    alarm[0]-=3

    if is_even(hit)=0
    {
        
        sprite_index=hurt_sprite
        
    }
    
}



/*
if distance_to_point(obj_link.x,obj_link.y)&lt;aggro_distance
aggro=1
*/

if aggro=0
alarm[0]=attack_wait

if life&lt;life_max
or point_distance(xstart,ystart,x,y)&gt;8
aggro=1

if aggro=1
{
with obj_enemy_par aggro=1
}




if hurt_init=0
if life&lt;life_max/2
{

    hurt_init=1
    
    var stun_time;
    stun_time=30
    stunned=stun_time
    stopped=stun_time
    
        {
        //abort attack
        alarm[0]=stun_time+4
        alarm[3]=-1
        
        attack=0
        
            sprite_index=sprite_normal
            sprite_current=sprite_index
            hurt_sprite=sprite_hurt_normal
            
            image_index=return_index
            
            image_index_mod=0
            
            
            aim=round(point_direction(x,y,obj_link.x,obj_link.y)/90)*90
            image_index=aim/90
            if image_index=4 image_index=0
        }
        
        
    
    o=instance_create(x,y+8,obj_placeholder)
    o.particle=1
    o.alarm[0]=30
    o.flashing=1
    o.z_change=6
    o.z=24
    o.z_gravity=.5
    o.stop_at_z_0=1
    o.direction=random(360)
    o.speed=1.75
    o.sprite_index=spr_iron_knuckle_helmet
    o.image_index=image_index
    o.image_speed=0
    
    attack_wait=attack_wait_hurt
    attack_init_time=attack_init_time_hurt
    
    var spr_to;
    spr_to=-1
    if sprite_current=sprite_attack[0] spr_to=0
    if sprite_current=sprite_attack[1] spr_to=1
    if sprite_current=sprite_attack[2] spr_to=2
    if sprite_current=sprite_attack[3] spr_to=3
    
    sprite_normal=spr_iron_knuckle_blue_hurt
    sprite_attack[0]=spr_iron_knuckle_attacking_r_hurt
    sprite_attack[1]=spr_iron_knuckle_attacking_u_hurt
    sprite_attack[2]=spr_iron_knuckle_attacking_l_hurt
    sprite_attack[3]=spr_iron_knuckle_attacking_d_hurt
    
    sprite_hurt_normal=spr_iron_knuckle_hit_hurt
    sprite_hurt_attack[0]=spr_iron_knuckle_hit_attacking_r_hurt
    sprite_hurt_attack[1]=spr_iron_knuckle_hit_attacking_u_hurt
    sprite_hurt_attack[2]=spr_iron_knuckle_hit_attacking_l_hurt
    sprite_hurt_attack[3]=spr_iron_knuckle_hit_attacking_d_hurt
    
    if spr_to=-1
    {
    sprite_current=sprite_normal
    sprite_hurt=sprite_hurt_normal
    }
    else
    {
    sprite_current=sprite_attack[spr_to]
    hurt_sprite=sprite_hurt_attack[spr_to]
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///moving1


////////////////////////////////////////////////////////

if global.show_inventory=1
exit

if stunned&gt;0
if attack=0
{
    moving_speed=0
    image_speed=0
    exit
}
if aggro=0 exit
if dead=1 exit

if abs(z-obj_link.z)&gt;global.link_aerial_dodge
if point_distance(x,y,obj_link.x,obj_link.y)&lt;32
exit

////////////////////////////////////////////////////////


if attack=0
if stab=0
{

    friction=0
    
    var pdir, sprint;
    pdir=round((point_direction(x,y,obj_link.x,obj_link.y)/12))*12
    sprint=0
    //if distance_to_object(obj_link)&gt;sprint_distance
    //sprint=.65
    
    if life&lt;life_max/2
    ms=move_speed_hurt+sprint
    else
    ms=move_speed+sprint
    
    //move_patrol_facing(ms+sprint,3,25,-100,4)

        if place_free(x+lengthdir_x(ms,pdir),y)=1
        x+=lengthdir_x(ms,pdir)
        if place_free(x,y+lengthdir_y(ms,pdir))=1
        y+=lengthdir_y(ms,pdir)
    
    
    //move_patrol_facing(ms+sprint,3,25,-100,4)
    /*
        if place_free(x+lengthdir_x(move_speed+sprint,pdir),y)=1
        x+=lengthdir_x(move_speed+sprint,pdir)
        if place_free(x,y+lengthdir_y(move_speed+sprint,pdir))=1
        y+=lengthdir_y(move_speed+sprint,pdir)*/
    

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///moving2


if global.show_inventory=1
exit

if dead=1
exit


if moving_speed&gt;0
{

    var xb, yb;
    xb=lengthdir_x(moving_speed,direction)
    yb=lengthdir_y(moving_speed,direction)
    if place_free(x+xb,y)
    {
        x+=xb
    }
    if place_free(x,y+yb)
    {
        y+=yb
    }
    
    moving_speed-=attack_friction

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///life or death
scr_life_or_death()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ANIMATION, ATTACK. ATTACK IS INITIATED BY ALARM[0]



if aggro=0 exit
if dead=1 exit
if global.show_inventory=1 exit







if stab=1
{

    image_index_mod+=image_speed_manual
    
    var temp_var;
    temp_var=stop_stab
    if life&lt;life_max/2
    temp_var=stop_stab_hurt
    if image_index_mod&gt;temp_var
    {
    
        stab=0
        
            if hurt_init
            {
                if random(1)&lt;stab_wait_time_hurt_chance
                stab_wait=stab_wait_time_hurt
                else
                stab_wait=stab_wait_time
            }
            else
            stab_wait=stab_wait_time
            
        image_index_mod=0
        image_index=0
        
        sprite_index=sprite_normal
        sprite_current=sprite_index
        hurt_sprite=sprite_hurt_normal

    }

}








if stab=0
{

    if attack=0
    {
    
    /////////////////////////////////////////////////////////
    if abs(z-obj_link.z)&gt;global.link_aerial_dodge
    if point_distance(x,y,obj_link.x,obj_link.y)&lt;32
    exit
    /////////////////////////////////////////////////////////
    
        if stunned&lt;=0
        {
            aim=round(point_direction(x,y,obj_link.x,obj_link.y)/90)*90
            image_index=aim/90
            if image_index=4 image_index=0
        }
        
        image_speed_manual=image_speed_normal
        if hurt_init
        image_speed_manual=image_speed_hurt
        
        if stopped&lt;=0
        {
            image_index_mod+=image_speed_manual
            if image_index_mod&gt;=1
            image_index_mod-=1
        }
        
    }
    
    
    
    if attack=1
    if animated=1
    {
    
        var temp_var, temp_var2;
    
        if life&lt;life_max/2
        {
        temp_var=stop_attack_hurt
        temp_var2=double_attack_chance_hurt
        }
        else
        {
        temp_var=stop_attack
        temp_var2=double_attack_chance
        }
    
        image_index_mod+=image_speed_attacking
        if image_index_mod&gt;=temp_var
        {
            
            attack=0
            
            alarm[0]=attack_wait
            /*
            if random(1)&lt;temp_var2
            if point_distance(x,y,obj_link.x,obj_link.y)&lt;double_attack_distance
            {
                alarm[0]=double_attack_wait
                attack_init_time=attack_init_time_double
                //reset direction of attack
                aim=round(point_direction(x,y,obj_link.x,obj_link.y)/90)*90
                image_index=aim/90
                if image_index=4 image_index=0
                //
            }*/
            
            sprite_index=sprite_normal
            sprite_current=sprite_index
            hurt_sprite=sprite_hurt_normal
            
            image_index=return_index
            
            image_index_mod=0
        
        }
        
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init stabbing

/*
STABBING IS OP LOL


if global.show_inventory=1 exit
if attack=1 exit
if aggro=0 exit
if dead=1 exit
if stab=1 exit
if stab_wait&gt;0 exit





if point_distance(x,y,obj_link.x,obj_link.y)&gt;stab_init_distance
{

    stab=1
    sprite_current=sprite_stab
    hurt_sprite=sprite_hurt_stab
    
    alarm[4]=stab_init_time
    /*
    if life&lt;life_max/2
    if stab_wait&gt;0
    if random(1)&lt;stab_init_time_chance
    {
        alarm[4]=1
    }
    */
    
    /*
    image_speed_manual=0
    image_speed=0
    image_index=0
    image_index_mod=0
    moving_speed=0

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GETTING CUT BY SWORD


if dead=1 exit
if instance_exists(obj_links_sword)=0 exit


scr_hit_by_sword_iron_knuckle()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEAD
//necessary cuz Iron Knuckle can have speed and image_speed


if dead=1
{
moving_speed=0
image_speed=0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
/*
if sprite_index=sprite_normal
move_outside_solid(point_direction(x,y,room_width/2,room_height/2),15)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PAUSING GAME


if global.show_inventory=1
{

    if alarm[0]&gt;=1
    alarm[0]+=1
    if alarm[1]&gt;=1
    alarm[1]+=1
    if alarm[2]&gt;=1
    alarm[2]+=1
    if alarm[3]&gt;=1
    alarm[3]+=1
    if alarm[4]&gt;=1
    alarm[4]+=1
    if alarm[5]&gt;=1
    alarm[5]+=1
    
    
    x-=hspeed
    y-=vspeed
    speed+=friction

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_barrier_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,speed)
speed=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if draw=0 exit


if attack=0
{

    if stab=0
    draw_sprite(sprite_index,image_index+round(image_index_mod)*4,round(x),round(y)-round(z))
    if stab=1
    draw_sprite(sprite_index,min(image_index_mod,2),round(x),round(y)-round(z))

}



else
{

    draw_sprite(sprite_index,min(image_index_mod,3),round(x),round(y)-round(z))
    
}


    if poisoned&gt;0
    {
        if global.show_inventory=0
        poison_i+=global.poison_damage_speed*res_poison
        
        if attack=0
        {
        
            if stab=0
            draw_sprite_ext(hurt_sprite,image_index+round(image_index_mod)*4,round(x),round(y)-round(z),1,1,0,c_white,sin(abs(poison_i)))
            if stab=1
            draw_sprite_ext(hurt_sprite,min(image_index_mod,2),round(x),round(y)-round(z),1,1,0,c_white,sin(abs(poison_i)))
        
        }
        else
        {
        
            draw_sprite_ext(hurt_sprite,min(image_index_mod,3),round(x),round(y)-round(z),1,1,0,c_white,sin(abs(poison_i)))
            
        }
    
    }
    else
    poison_i=0


/*
if image_index_mod&lt;=2.5
{

    draw_sprite(sprite_index,image_index+round(image_index_mod)*4,x,y)

}



else
{

    //the check here is a patch
    if aim&gt;=315
    draw_sprite(sprite_index,12,x,y)
    else
    draw_sprite(sprite_index,round(image_index)+3*4,x,y)
    
}


*/



/*
// TO TEST THE BOUNDING BOX
draw_set_color(c_red)
draw_set_alpha(.6)
draw_rectangle(x-sprite_left,y-sprite_up,x+sprite_right,y+sprite_down,0)
draw_set_alpha(1)


/*
draw_set_color(c_red)
draw_set_alpha(.6)
draw_rectangle(x-sprite_width_default/2,y-sprite_height_default/2,x+sprite_width_default/2,y+sprite_height_default/2,0)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
