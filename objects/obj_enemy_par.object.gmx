<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///states

draw=1

can_be_hit_by_spikes=1

wet=0
waveindex=0
xg=0
yg=0

x_start=x
y_start=y

can_push_buttons=0

can_fall_in_holes=1
can_drown=1
can_get_wet=1

first_spawn=1

//whether or not this mon will spawn at a spawn point.. depends on whether there are spawn points (and where the enemy is located in the room- see end step event)
spawner=0

spawn_warp=1


flying=0



offset_x=0
offset_y=0


always_hits=0
move_out_on_collision=0



//whether or not they can jump while stunned
stun_jump=0



poison_i=0

image_index_mod=0
draw_own_poison=0



hinox=0


stopped=0
stop_after_attack_time=0
burn_damage_timer=0

grabbed_link=0

invincible=0
//whether sword is deflected off the enemy while they're immune to physical
sword_bounce=0
//iron mask is immune to attacks from front
forward_immune=0

//this is added to how long they flash when hit
extra_hit=0

//whether or not the monster can attack from any z height
aerial_attack=0
//whether or not the monster can attack while stunned
stun_attack=0

jump=0
jump_height=0
jump_gravity=1
jump_speed=0
jump_dir=0
z=0
z_change=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///defense and other resists

physical_defense=0


res_spike=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///for delayed death, so they flash before dying

if hit&lt;=0
instance_destroy()
else
{
alarm[10]+=1
if hit&gt;death_timer
hit-=2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///no speed while stunned

if stunned&gt;0
speed=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///keeping them inside the view


if aggro=0 exit
if stunned&gt;0 exit
if global.show_inventory=1 exit

if y&gt;view_yview+200
y=view_yview+200
if y&lt;view_yview+24
y=view_yview+24
if x&gt;view_xview+216
x=view_xview+216
if x&lt;view_xview+8
x=view_xview+8
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///knockback


if grabbed_link=1
{
    knockback=0
    exit
}

if knockback&gt;0
{

    var xb, yb;
    xb=lengthdir_x(knockback,knockback_dir)
    yb=lengthdir_y(knockback,knockback_dir)
    
        if collides_with_walls=1
        {
            if place_meeting(x+xb,y,obj_barrier_par)=0
            and place_meeting(x+xb,y,obj_enemy_barrier)=0
            {
                x+=xb
            }
            /*
            else
            move_contact_solid(point_direction(0,0,xb,0),xb)*/
            
            
            if place_meeting(x,y+yb,obj_barrier_par)=0
            and place_meeting(x,y+yb,obj_enemy_barrier)=0
            {
                y+=yb
            }
            /*
            else
            move_contact_solid(point_direction(0,0,xb,0),xb)*/
        }
        
    else
        if collides_with_walls=0
        {
            if x+xb&gt;view_xview+8
            if x+xb&lt;view_xview+view_wview-8
                x+=xb
                
            if y+yb&gt;view_yview+16+8
            if y+yb&lt;view_yview+view_hview-8
                y+=yb
        }
    
    
    knockback-=global.knockback_decay_rate

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inventory pausing


if global.show_inventory=1
if stunned&gt;2
stunned+=1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///warping to spawn point


if spawn_warp=1
{
        

    if x&gt;view_xview
    and x&lt;view_xview+view_wview
    and y&gt;view_yview
    and y&lt;view_yview+view_hview
    {
        
        
        spawn_warp=0
        
        y=y_start
        
        if instance_exists(obj_spawn_point)
        and (y mod (view_hview-16))=16
        {
        
        
            spawner=1
        
        
            temp_id=instance_find(obj_spawn_point, irandom_range(0,instance_number(obj_spawn_point)-1)  )
            
                repeat(1200) //while loop may have crashed game..
                {
                    if temp_id.used=1
                    {
                    temp_id=instance_find(obj_spawn_point, irandom_range(0,instance_number(obj_spawn_point)-1)  )
                    }
                    else
                    break
                }
            
            
            temp_id.used=1
            x=temp_id.x
            y=temp_id.y
            
            if visible=1
            if variable_local_exists("color")
            {
            obj=instance_create(x,y,obj_enemy_explosion)
            obj.sprite_index=color
            }
            
        }
    
    
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///making them invisible if they are spawning for the first time

if first_spawn=1
if spawner=1
if obj_link.shifting_view=1
{
    if x&gt;=obj_link.newx
    and y&gt;obj_link.newy
    and x&lt;obj_link.newx+view_wview
    and y&lt;obj_link.newy+view_hview
    {
        draw=0
        first_spawn=0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///burned


if global.show_inventory=1 exit



if burned&gt;0
{

    burn_damage_timer+=2
    
    if burn_damage_timer&gt;=global.burn_damage_step
    {
        life-=1
        hit=global.link_sword_hit
        burn_damage_timer=0
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///poisoned


if global.show_inventory=1 exit



poisoned-=1


if poisoned&gt;0
{
    
    if poison_i&gt;=1
    {
        poison_i-=2
        life-=global.poison_damage_per_flash
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///regulating it so you can't be burned and frozen simultaneously

if burned&gt;0
and frozen&gt;0
{

    var temp_var;
    temp_var=min(burned,frozen)
    
    burned-=temp_var
    frozen-=temp_var
    stunned=frozen

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jumping

if global.show_inventory=1 exit

if dead=1
{
    jump_speed=0
}


if stunned&lt;=0
move_jumping(jump_speed,jump_dir,jump_gravity)
else
{
move_jumping(jump_speed*stun_jump,jump_dir,jump_gravity)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw poison overlay

if draw=0 exit

if dead=1 exit
if draw_own_poison=1 exit


if poisoned&gt;0
{
    if global.show_inventory=0
    poison_i+=global.poison_damage_speed*res_poison
    
    draw_sprite_ext(hurt_sprite,image_index+round(image_index_mod)*4,round(x),round(y)-round(z),1,1,0,c_white,sin(abs(poison_i)))
}
else
poison_i=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw burning/freezing overlays

if draw=0 exit


if dead=1
{
    if burned&gt;0
    burned=100
    if frozen&gt;0
    {
    frozen=100
    stunned=100
    }
}


if burned&gt;0
{

    /*
    var temp_var;
    temp_var=1
    
    if sprite_width&gt;=28
    or sprite_height&gt;=28
    temp_var=2
    
    
    if temp_var=2
    {
        
        i=45
        repeat(4)
        {
            draw_sprite_ext(spr_fire_ball_large,is_even(stunned),round(x+lengthdir_x(5,i)),round(y-z+lengthdir_y(5,i)),1,1,270,c_white,1)
            i+=90
        }
    
    }*/
    
    
    draw_sprite_ext(spr_fire_ball_large,is_even(stunned),round(x),round(y)-round(z),1,1,270,c_white,1)

}

if frozen&gt;0
{

    var temp_var;
    temp_var=spr_ice_crystal
    if sprite_width&gt;=28
    or sprite_height&gt;=28
    temp_var=spr_ice_crystal_large

    if stunned&gt;=0
    if stunned&lt;15
    draw_sprite(temp_var,0,round(x)+is_even(stunned),round(y)-round(z))
    
    if stunned&gt;=15
    draw_sprite(temp_var,0,round(x),round(y)-round(z))

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw shadow 

if draw=0 exit

if z&gt;3
draw_sprite_ext(spr_shadow1,0,round(x),round(y)+6,1,1,0,c_white,.75)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dead=1 exit
if wet=1
{
    waveindex+=.15
    draw_sprite(spr_enemy_waves,waveindex,round(x),round(y))
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///wet



wet=0
xg=0
yg=0


if place_meeting(x,y,obj_moving_platform_td_par)
{
    exit
}

if z&gt;0 exit

if can_get_wet=0
exit




var yt, b, bd;
yt=4
b=4
bd=6

if position_meeting(x,y+yt,obj_water_par)
if position_meeting(x-b,y+yt-2,obj_water_par)
if position_meeting(x-b,y+yt+bd,obj_water_par)
if position_meeting(x+b,y+yt-2,obj_water_par)
if position_meeting(x+b,y+yt+bd,obj_water_par)
wet=1


if wet=1
yg=2
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
