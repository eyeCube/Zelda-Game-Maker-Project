<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_explosion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-40</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=.33

size=20
damage=4
knockback=110

side=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with obj_teleporter
if alarm[1]&gt;0
exit


var temp_id, temp_dir;
temp_id=id


temp_dir=point_direction(x,y,obj_link.x,obj_link.y-obj_link.z)
with obj_link
{

    screen_shake=min(15,64-(point_distance(x,y-z,other.x,other.y)-min(sprite_width,sprite_height)/12))
    
    if hit&lt;=0
    if point_distance(x,y-z,other.x,other.y)-min(sprite_width,sprite_height)/2&lt;other.size*global.link_res_explosion
    {
    
        hit=global.link_hit
        global.link_life-=round(other.damage*global.link_res_explosion_damage)
        knockback=other.knockback/mass*global.knockback_force
        knockback_dir=temp_dir
    
    }

}



if side=0
with obj_enemy_par
{

    if visible=1
    if res_explosion&gt;0
    {

        temp_dir=point_direction(temp_id.x,temp_id.y,x,y)
    
        if point_distance(x,y-z,other.x,other.y)-min(sprite_width,sprite_height)/2&lt;other.size*res_explosion
        {
        
            var go;
            go=1
            
            if forward_immune=1
            if abs(angle_difference(temp_dir,image_index*90))&lt;225
            go=0
            
            if go=1
            {
                if global.link_bomb_hit&gt;hit
                hit=global.link_bomb_hit
                
                life-=round(other.damage*res_explosion_damage)
                
                knockback=other.knockback/mass*global.knockback_force
                knockback_dir=temp_dir
                
                stunned=res_explosion*global.enemy_explosion_stun
                stopped=stunned
            }
        
        }
    
    }

}

with obj_breakable_par
if res_explosion!=0
if x&gt;=view_xview
if x&lt;=view_xview+view_wview
if y&gt;=view_yview+16
if y&lt;=view_yview+view_hview
if sprite_index!=spr_enemy_falling
{

    if point_distance(x+8,y+8,other.x,other.y)&lt;other.size*res_explosion
    {
    
        instance_destroy()
        
    }

}
with obj_grass_par
{

    if distance_to_point(other.x,other.y)&lt;other.size*res_explosion
    {
    
        instance_destroy()
        
    }

}

with obj_switch_par
if hit&lt;=0
{

    if distance_to_point(other.x,other.y)&lt;other.size
    {
    
        hit=15
        
            if timer=1
            {
                status=1
                image_index=1
                
                alarm[0]=time_limit
            }
            
            else
            {
                status=!status
                image_index=status
            }
        
                    obj=instance_create(x+8,y+8,obj_particle)
                    obj.alarm[0]=3
        
    }

}



with obj_bomb
{

    if distance_to_point(other.x,other.y)&lt;other.size*res_explosion
    {
    
            var b;
            b=7
        
        if mode&lt;2
        {
            mode=2
            alarm[1]=b
        }
        else
        {
            if alarm[1]&gt;b
            {mode=3}
        }
        
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,round(x),round(y))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
