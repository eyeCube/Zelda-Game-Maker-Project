<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hole_1_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x-8,y-8,obj_enemy_avoid_block)

if variable_local_exists("block_hole")=0
{

    block_hole=0

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with obj_breakable_par
if place_meeting(x,y,other.id)
{


    if place_meeting(x,y,obj_moving_platform_td_par)=0
    if sprite_index!=spr_enemy_falling
    if pushing=0
    {
    
        if position_meeting(x+8,y+8,other.id)
        scr_breakable_fall()
        
    }

}





if block_hole=1
{
    with obj_barrier_par
    {

        if place_meeting(x,y,obj_moving_platform_td_par)=0
        if pushing=0
        if can_push!="no"
        {
        
            
            if place_meeting(x,y,other.id)
            {
            
            scr_block_fall(other.x,other.y)
            
            }
        
        }
        
        
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///swallowing link


if global.show_inventory=1
exit

if collision_rectangle(x-5,y-5,x+5,y+5,obj_link,1,0)&lt;0 exit



with obj_link
{
        if place_meeting(x,y,obj_moving_platform_td_par)=1 exit
        if dead=1 exit
        if jump=1 exit
        if z&gt;0 exit
        
        if hole_pulling=1
        exit
        
        hole_pulling=1
    
    
        
    
    if sprite_index!=spr_link_falling
    {
        
        var p_dir;
        p_dir=point_direction(x,y,other.x,other.y)
        
            x+=lengthdir_x(.7,p_dir)
            y+=lengthdir_y(.7,p_dir)
            
            if slowed&lt;2
            slowed=2
    
    }
    
    
    
    var xt, yt, xb, yb;
    yt=6
    xt=6
    
    xb=0
    yb=0
    
        if other.y&gt;y
        if check_up=1
        yb+=4
        if other.y&lt;y
        if check_down=1
        yb-=4
        if other.x&gt;x
        if check_left=1
        xb+=4
        if other.x&lt;x
        if check_right=1
        xb-=4
    

        //////////////////////////////////////////////////////////////////////
        if position_meeting(x+xb,y+yb,obj_hole_par)=0
        exit
        //////////////////////////////////////////////////////////////////////
        if position_meeting(x-xt+xb,y+yb,obj_hole_par)
        and position_meeting(x+xb,y-yt+yb,obj_hole_par)
        and position_meeting(x+xt+xb,y+yb,obj_hole_par)
        and position_meeting(x+xb,y+yt+yb-1,obj_hole_par)
        {
        scr_fall()
        }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bomb">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.show_inventory=1
exit

if place_meeting(x,y,obj_barrier_par) exit

with other
{
if visible=1
if place_meeting(x,y,obj_moving_platform_td_par)=0
if sprite_index!=spr_enemy_falling
if z&lt;=0
{

    
    other.speed=0
    
    
    
        p_dir=point_direction(x,y,other.x,other.y)
        x+=lengthdir_x(.75,p_dir)
        y+=lengthdir_y(.75,p_dir)
    
    
    var xt, yt;
    yt=4
    xt=5
    
    
        if position_meeting(x,y,obj_hole_par)
        and position_meeting(x-xt,y,obj_hole_par)
        and position_meeting(x,y-yt,obj_hole_par)
        and position_meeting(x+xt,y,obj_hole_par)
        and position_meeting(x,y+yt,obj_hole_par)
        scr_bomb_fall()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_item_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.show_inventory=1
exit

if place_meeting(x,y,obj_barrier_par) exit

with other
{
if visible=1
if place_meeting(x,y,obj_moving_platform_td_par)=0
if sprite_index!=spr_enemy_falling
if picked_up=0
if z&lt;=0
{

    
    other.speed=0
    
    
    
        p_dir=point_direction(x,y,other.x,other.y)
        x+=lengthdir_x(.75,p_dir)
        y+=lengthdir_y(.75,p_dir)
    
    
    var xt, yt;
    yt=4
    xt=5
    
    
        if position_meeting(x,y,obj_hole_par)
        and position_meeting(x-xt,y,obj_hole_par)
        and position_meeting(x,y-yt,obj_hole_par)
        and position_meeting(x+xt,y,obj_hole_par)
        and position_meeting(x,y+yt,obj_hole_par)
        scr_item_fall()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.show_inventory=1
exit

if place_meeting(x,y,obj_barrier_par) exit

with other
{
    if life&gt;0
    if place_meeting(x,y,obj_moving_platform_td_par)=0
    if jump=0
    if can_fall_in_holes=1
    {
    
    
        
        knockback=0
        speed=0
        
        
        
            p_dir=point_direction(x,y,other.x,other.y)
            x+=lengthdir_x(.75,p_dir)
            y+=lengthdir_y(.75,p_dir)
            
            if slowed&lt;2
            slowed=2
        
        
        var xt, yt;
        yt=2
        xt=2
        
            if position_meeting(x,y,obj_hole_par)
            and position_meeting(x-xt,y,obj_hole_par)
            and position_meeting(x,y-yt,obj_hole_par)
            and position_meeting(x+xt,y,obj_hole_par)
            and position_meeting(x,y+yt,obj_hole_par)
            scr_enemy_fall()
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
