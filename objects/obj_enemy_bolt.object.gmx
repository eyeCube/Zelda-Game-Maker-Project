<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>life=1

visible=0
alarm[0]=1
stick_in_target=0
stuck=0

deflectable=1

create_particles=1

force=0

collides_with_walls=1

z=0
z_change=0

homing=0

lobbed=0
irregular=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if spell!="Arrow"
if create_particles=1
{

    if spell!="Fire"
    {
        if spell!="Deku Nut"
        {
            repeat(4+random(2))
            {
                    
                obj=instance_create(x+lengthdir_x(speed,direction),y+lengthdir_y(speed,direction),obj_particle)
                obj.direction=random(360)
                obj.gravity=.1
                obj.gravity_direction=270
                obj.speed=random(4)
                obj.friction=.1
                obj.sprite_index=particle_sprite
                obj.image_index=random(2)
                obj.image_angle=choose(0,90,180,270)
                obj.image_speed=0
                obj.alarm[0]=5+random(5)
                    
            }
        }
        else
        {
            obj_draw_control_high.blackout=(100-point_distance(x,y,obj_link.x,obj_link.y))/100
            with obj_link
            {
                var stuntime;
                stuntime=(37-point_distance(x,y,other.x,other.y))
                if stuntime&lt;10
                stuntime=0
                stunned=max(stunned,stuntime)
            }
        }
    }
    else
    {
        obj=instance_create(x+lengthdir_x(speed,direction),y+lengthdir_y(speed,direction),obj_particle)
        obj.sprite_index=spr_fire_ball_large
        obj.image_speed=1
        obj.image_angle=270
        obj.alarm[0]=30
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>create_particles=0
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stuck


if stuck=1
{

    ///////////////////////////////////////////////////
    if instance_exists(stuck_id)=0
    {
        instance_destroy()
        exit
    }
    ///////////////////////////////////////////////////

    x=stuck_id.x+stuck_x
    y=stuck_id.y+stuck_y
    if sprite_index=spr_arrow_charge_enemy
    sprite_index=spr_arrow_red

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pausing game

if obj_link.warp
or global.show_inventory=1
{
    x-=hspeed
    y-=vspeed
    alarm[10]+=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///homing

if homing&gt;0
{

    direction+=homing*sign(angle_difference(point_direction(x,y,obj_link.x,obj_link.y),direction))

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hitting link

////////////////////////////////////////////////////////////////////////

if abs(z-obj_link.z)&gt;=global.link_aerial_dodge
exit
if obj_link.dead exit

////////////////////////////////////////////////////////////////////////



var temp_id;
temp_id=id


with obj_link
{

if shifting_view=1
exit



            x+=xg
            y+=yg




if visible=1
if hit&lt;=0


    if collision_rectangle(x-sprite_width/2+2,y-sprite_height/2-z+6,x+sprite_width/2-2,y+sprite_height/2-z-2,temp_id,0,0)&gt;0
    if temp_id.stuck=0
    {
    
    global.link_life_previous=global.link_life
    

            
        
        if temp_id.spell="Magic"
        {
        
            if global.link_res_magic&gt;0
            {
            
                global.link_life-=temp_id.damage*global.link_res_magic
                hit=global.link_hit
            
            }
        
        }
        
        if temp_id.spell="Physical"
        or temp_id.spell="Deku Nut"
        {
        
            if global.link_res_physical&gt;0
            {
            
                global.link_life-=temp_id.damage*global.link_res_physical
                hit=global.link_hit
            
            }
        
        }
        
        if temp_id.spell="Lightning"
        {
        
            if global.link_res_lightning&gt;0
            {
            
                global.link_life-=temp_id.damage*global.link_res_lightning
                shocked=temp_id.damage*global.link_res_lightning*global.shock_time
                stunned=max(stunned,shocked)
                hit=shocked
            
            }
        
        }
        
        if temp_id.spell="Fire"
        {
        
            if global.link_res_fire&gt;0
            {
            
                global.link_life-=temp_id.damage*global.link_res_fire
                burned=temp_id.damage*global.link_res_fire*global.burn_time
                hit=global.link_hit
                
                temp_id.create_particles=0
            
            }
        
        }
        
        if temp_id.spell="Ice"
        {
        
            global.link_life-=temp_id.damage*global.link_res_ice_damage
            frozen=temp_id.damage*global.link_res_ice*global.freeze_time
            stunned=max(frozen,stunned)
            if global.link_res_ice_damage&gt;0
            hit=global.link_hit
        
        }
        
        if temp_id.spell="Arrow"
        {
        
            if global.link_res_arrow&gt;0
            {
            
                global.link_life-=temp_id.damage*global.link_res_arrow
                hit=global.link_hit
            
            }
        
        }
        
        
        if global.link_life_previous-global.link_life&gt;=global.massive_damage
        hit=global.link_hit*2
        
        
        knockback=(temp_id.force)/mass*global.knockback_force
        knockback_dir=temp_id.direction
        
        
        
        //snd_play()
            
        
        
        
        
        if temp_id.spell="Arrow"
        {
        
            with temp_id
            {
            
                if stick_in_target=1
                {
                
                    if direction=0
                    {
                        x=obj_link.x-6
                    }
                    if direction=90
                    {
                        y=obj_link.y+6
                    }
                    if direction=180
                    {
                        x=obj_link.x+6
                    }
                    if direction=270
                    {
                        y=obj_link.y-6
                    }
                
                    stuck=1
                    stuck_id=obj_link.id
                    stuck_x=x-obj_link.x
                    stuck_y=y-obj_link.y
                    
                    var temp_var;
                    temp_var=point_distance(stuck_x,stuck_y,0,0)-(max(obj_link.sprite_width,obj_link.sprite_height)-8)
                    if temp_var&gt;0
                    {
                    stuck_x+=lengthdir_x(temp_var,point_direction(stuck_x,stuck_y,0,0))
                    stuck_y+=lengthdir_y(temp_var,point_direction(stuck_x,stuck_y,0,0))
                    }
                    
                    alarm[10]=45
                    
                    speed=0
                    depth=2
                
                }
            
            
            }
                
        }
        
        else
        {
            with temp_id    instance_destroy()
        }
    
        
        
        
    }
    
    
                    
                x-=xg
                y-=yg

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///image angle


if spell!="Lightning"
if spell!="Deku Nut"
if spell!="Physical"
or sprite_index=spr_wind_bolt
or homing&gt;0
image_angle=direction

if global.show_inventory=0
if sprite_index=spr_bone
image_angle+=90
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///colliding with walls


if collides_with_walls=1
{

    var go;
    go=0
    
    if place_meeting(x,y,obj_barrier_par)=1
    go=1
    if place_meeting(x,y,obj_button_flame)=1
    if instance_place(x,y,obj_button_flame).visible=1
    go=1
    
    if go=1
    {
    
        if stuck=0
        if spell="Arrow"
        {
        
            x+=lengthdir_x(speed,direction)
            y+=lengthdir_y(speed,direction)
                        
            obj=instance_create(x,y,obj_particle)
            obj.speed=random(3)
            obj.direction=(random(360))
            obj.gravity=.3
            obj.gravity_direction=270
            obj.sprite_index=sprite_index
            obj.image_index=image_index
            obj.image_speed=0
            obj.alarm[0]=8
            obj.image_angle_change=choose(-90,90)
        
        }
                        
        instance_destroy()
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///colliding with link's sword


with obj_links_sword
{
x+=obj_link.xg
y+=obj_link.yg
}



if place_meeting(x,y,obj_links_sword)
{
    
    
    if lobbed=0
    {
        
        if obj_links_sword.dies_if_button_unpressed=1
        exit
        if stuck=1
        exit
        
        
        if spell="Arrow"
        {
        
            x+=lengthdir_x(speed,direction)
            y+=lengthdir_y(speed,direction)
                        
            obj=instance_create(x,y,obj_particle)
            obj.speed=random(3)
            obj.direction=(random(130)+25)
            obj.gravity=.3
            obj.gravity_direction=270
            obj.sprite_index=sprite_index
            if sprite_index=spr_arrow_charge_enemy
            obj.sprite_index=spr_arrow_red
            obj.image_index=image_index
            obj.image_speed=0
            obj.alarm[0]=20
            obj.image_angle_change=choose(-90,90)
        
        }
                  
        
        
        if spell!="Arrow"
        {
        
            if deflectable=1
            {
            
                var absdir;
                absdir=direction-180
                if absdir&lt;0
                absdir+=360
                
                if abs(angle_difference(obj_link.image_index*90,absdir))&lt;global.link_sword_deflection_angle
                {
                
                    create_particles=0
                    
                    repeat(2+random(2))
                    {
                        obj=instance_create(x,y,obj_particle)
                        obj.speed=random(3)
                        obj.direction=(random(360))
                        obj.gravity=.3
                        obj.gravity_direction=270
                        obj.sprite_index=particle_sprite
                        obj.image_index=0
                        obj.image_speed=1
                        obj.alarm[0]=7+random(3)
                        obj.image_angle_change=0
                    }
                    
                    
                    obj=instance_create(x,y,obj_links_bolt)
                    obj.direction=direction-180
                    obj.speed=speed+2
                    obj.damage=damage
                    obj.spell=spell
                    obj.stick_in_target=stick_in_target
                    obj.sprite_index=sprite_index
                    obj.particle_sprite=particle_sprite
                    obj.create_particles=create_particles
                }
            }
        
        }
        
        
        if sprite_index=spr_bone
        {
            obj=instance_create(x,y,obj_particle)
            obj.speed=random(2)
            obj.direction=(random(360))
            obj.gravity=.3
            obj.gravity_direction=270
            obj.sprite_index=sprite_index
            obj.image_index=image_index
            obj.image_speed=0
            obj.alarm[0]=12
            obj.image_angle_change=choose(-90,90)
        }
        
        
        
        instance_destroy()
        
    
    }
    
    
    
    
    
    
    
    
    if lobbed=1
    if z&lt;=16
    {
    
        if spell!="Deku Nut"
        {
        
            life-=fragility
            direction=point_direction(obj_links_sword.x,obj_links_sword.y,x,y)
            
            obj=instance_create(x,y,obj_links_bolt)
            obj.move_speed=move_speed
            obj.z=z
            obj.z_change=z_change
            obj.gravity_intensity=gravity_intensity
            obj.jump=jump
            obj.damage=damage
            obj.spell=spell
            obj.stick_in_target=stick_in_target
            obj.sprite_index=sprite_index
            obj.image_index=image_index
            obj.image_xscale=image_xscale
            obj.create_particles=create_particles
            obj.lobbed=1
            obj.life=life
            obj.fragility=fragility
            obj.irregular=irregular
            obj.bounciness=bounciness
            
        }
        
        instance_destroy()
    
    }
    


}





with obj_links_sword
{
x-=obj_link.xg
y-=obj_link.yg
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///colliding with bombs



with obj_bomb
{
y-=z
    
    if place_meeting(x,y,other)
    {
        
        mode=3
    
    
        with other
        instance_destroy()
        
    }



y+=z
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///lobbed projectiles

if global.show_inventory=1 exit
if obj_link.shifting_view=1 exit


if lobbed=1
{
    move_jumping(move_speed,direction,gravity_intensity)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if lobbed=1
if z&lt;1
if abs(z_change)&lt;1
life=0


if life&lt;=0
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if z&gt;3
draw_sprite_ext(spr_shadow1,0,round(x),round(y)+1,1,1,0,c_white,.75)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if trail&gt;0
{

    a=3
    times=5
    i=times
    repeat(times)
    {
        draw_sprite_ext(sprite_index,image_index,round(x+lengthdir_x(i*a,point_direction(x,y,xprevious,yprevious))),round(y+lengthdir_y(i*a,point_direction(x,y,xprevious,yprevious)))-round(z),1,1,direction,c_white,1)
        i-=1
    }

}
*/

var zt;
zt=round(z)
if stuck=1
zt=round(obj_link.z)

draw_sprite_ext(sprite_index,image_index,round(x),round(y)-zt,image_xscale,image_yscale,image_angle,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
